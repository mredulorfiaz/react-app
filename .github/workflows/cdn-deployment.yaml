name: CDN deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  region: ap-southeast-1

permissions:
  id-token: write
  contents: read

    
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      - name: Install required packages and build react application
        run: |
          npm ci
          npm run build
      
      - name: Assume AWS IAM Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.region }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-session-name: deployment
      
      - name: Upload build artifacts to S3 bucket
        run: |
          aws s3 cp --recursive ./dist/ s3://amader-s3-bucket/devops-ic/
      
      - name: Invalidate cache of cloudfront distribution
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CF_DISTRIBUTION_ID }} --paths "/*"
      
      - name: Publish app to cloudflare pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler pages deploy ./dist --project-name my-react-app --branch main
            # - name: Purge Cloudflare Cache
      - name: Purge cloudfront cache
        env:
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
          -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'


